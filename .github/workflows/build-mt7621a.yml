name: Build QModem for MT7621a

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  SDK_URL: https://downloads.openwrt.org/releases/22.03.3/targets/ramips/mt7621/openwrt-sdk-22.03.3-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz
  MIRROR_URL: https://mirror.0x.si/openwrt/releases/22.03.3/targets/ramips/mt7621/openwrt-sdk-22.03.3-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Clean workspace
      run: |
        sudo rm -rf /usr/local/lib/android /opt/hostedtoolcache
        df -h

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libncurses5-dev \
          zlib1g-dev \
          file \
          unzip \
          rsync \
          tree

    - name: Download SDK
      id: sdk
      run: |
        for i in {1..3}; do
          wget -T 60 ${{ env.SDK_URL }} -O sdk.tar.xz && break || sleep 10
          [ $i -eq 3 ] && wget -T 60 ${{ env.MIRROR_URL }} -O sdk.tar.xz || exit 1
        done

        if [ $(stat -c%s sdk.tar.xz) -lt 100000000 ]; then
          echo "::error::Downloaded SDK is too small (corrupted)"
          exit 1
        fi

    - name: Extract SDK
      run: |
        tar -xvf sdk.tar.xz 2>&1 | tee tar.log
        grep -i "error" tar.log && exit 1
        SDK_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*")
        [ -z "$SDK_DIR" ] && echo "::error::No SDK directory found" && exit 1
        mv "$SDK_DIR" sdk
        rm -f sdk.tar.xz

        echo "SDK_PATH=$(pwd)/sdk" >> $GITHUB_ENV
        echo "STAGING_DIR=$(pwd)/sdk/staging_dir" >> $GITHUB_ENV
        echo "PATH=$(pwd)/sdk/staging_dir/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin:$PATH" >> $GITHUB_ENV

    - name: Verify toolchain
      run: |
        mipsel-openwrt-linux-gcc -v || exit 1
        file $(which mipsel-openwrt-linux-gcc)

    - name: Prepare package directory
      run: |
        PKG_DIR="${{ env.SDK_PATH }}/package/qmodem"
        rm -rf "$PKG_DIR" || true
        mkdir -p "$PKG_DIR"

        # Safe copy using rsync (exclude .git, .github, sdk)
        rsync -av \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='sdk' \
          "$GITHUB_WORKSPACE/" "$PKG_DIR/"

        echo "=== Package contents ==="
        tree -L 2 "$PKG_DIR"

    - name: Compile package
      run: |
        cd ${{ env.SDK_PATH }}
        
        # Initialize feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a

        # Force enable the package
        touch .config
        echo "CONFIG_PACKAGE_qmodem=y" >> .config

        # Compile with debug output
        make package/qmodem/compile V=sc 2>&1 | tee compile.log
        grep -i "error" compile.log && exit 1

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qmodem-ipk
        path: |
          ${{ env.SDK_PATH }}/bin/packages/*/*.ipk
          ${{ env.SDK_PATH }}/compile.log

    - name: Upload debug info on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: debug-info
        path: |
          ${{ env.SDK_PATH }}/.config
          ${{ env.SDK_PATH }}/tmp/pkg/qmodem/
          ${{ env.SDK_PATH }}/compile.log
