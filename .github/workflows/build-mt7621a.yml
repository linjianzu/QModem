name: Build MT7621a IPK (OpenWrt 22.03.3)

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ "main" ]

env:
  SDK_URL: https://downloads.openwrt.org/releases/22.03.3/targets/ramips/mt7621/openwrt-sdk-22.03.3-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz
  MIRROR_URL: https://mirror.0x.si/openwrt/releases/22.03.3/targets/ramips/mt7621/openwrt-sdk-22.03.3-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz  # 备用镜像

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Clean disk space
      run: |
        sudo rm -rf /usr/local/lib/android /opt/hostedtoolcache
        df -h

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libncurses5-dev \
          zlib1g-dev \
          file \
          unzip \
          python3 \
          rsync

    - name: Download SDK (with retry)
      run: |
        for i in {1..3}; do
          wget -T 30 ${{ env.SDK_URL }} -O sdk.tar.xz && break || sleep 10
          [ $i -eq 3 ] && wget -T 60 ${{ env.MIRROR_URL }} -O sdk.tar.xz || exit 1
        done

        # 验证文件完整性
        if [ $(stat -c%s sdk.tar.xz) -lt 100000000 ]; then
          echo "❌ 文件大小异常（可能下载不完整）"
          exit 1
        fi
        file sdk.tar.xz | grep "XZ compressed data" || exit 1

    - name: Extract and verify SDK
      run: |
        tar -xvf sdk.tar.xz 2>&1 | tee tar.log
        grep -i "error" tar.log && exit 1
        
        SDK_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*")
        [ -z "$SDK_DIR" ] && echo "❌ 解压后未找到SDK目录" && exit 1
        
        mv "$SDK_DIR" sdk
        rm -f sdk.tar.xz

        # 关键目录检查
        REQUIRED_DIRS=("staging_dir" "package" "scripts")
        for dir in "${REQUIRED_DIRS[@]}"; do
          [ ! -d "sdk/$dir" ] && echo "❌ 缺少目录: $dir" && exit 1
        done

        echo "SDK_PATH=$(pwd)/sdk" >> $GITHUB_ENV

    - name: Setup QModem package
      run: |
        mkdir -p ${{ env.SDK_PATH }}/package/qmodem
        cp -r $GITHUB_WORKSPACE/* ${{ env.SDK_PATH }}/package/qmodem/
        rm -rf ${{ env.SDK_PATH }}/package/qmodem/.github

        # 验证Makefile存在
        [ ! -f "${{ env.SDK_PATH }}/package/qmodem/Makefile" ] && \
          echo "❌ Makefile缺失" && exit 1

    - name: Compile package
      run: |
        cd ${{ env.SDK_PATH }}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
        # 生成默认配置
        make defconfig 2>&1 | tee defconfig.log
        grep -i "error" defconfig.log && exit 1

        # 编译指定包
        make package/qmodem/compile V=s 2>&1 | tee compile.log
        grep -i "error" compile.log && exit 1

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: qmodem-ipk
        path: |
          ${{ env.SDK_PATH }}/bin/packages/*/base/*.ipk
          ${{ env.SDK_PATH }}/*.log  # 上传日志供调试
